pipeline {
    agent any

    tools {
        python 'Pytho3'
    }

    environment {
        GITHUB_CREDENTIALS = 'your-github-creds-id'
        DOCKER_CREDENTIALS = 'dockerhub-creds'
        DOCKER_IMAGE = 'yourdockerhubusername/messaging_app:latest'
    }

    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'main',
                    credentialsId: "${GITHUB_CREDENTIALS}",
                    url: 'https://github.com/felikz97/alx-backend-python.git'
            }
        }

        stage('Install Dependencies') {
            steps {
                sh 'pip3 install -r messaging_app/requirements.txt'
            }
        }

        stage('Run Tests') {
            steps {
                sh 'pytest messaging_app --junitxml=report.xml'
            }
        }

        stage('Publish Test Report') {
            post {
                always {
                    junit 'report.xml'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh "docker build -t $DOCKER_IMAGE ./messaging_app"
                }
            }
        }

        stage('Push to Docker Hub') {
            steps {
                withCredentials([usernamePassword(credentialsId: "${DOCKER_CREDENTIALS}", usernameVariable: 'felikz254', passwordVariable: 'Felikz.254')]) {
                    sh """
                        echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                        docker push $DOCKER_IMAGE
                    """
                }
            }
        }
    }
}
